{"Asset":{"mju6ql23f29enxqt":{"_id":"mju6ql23f29enxqt","source":"themes/cover/source/favicon.ico","mtime":1396101022000},"vi1r432bb8jm5xuk":{"_id":"vi1r432bb8jm5xuk","source":"themes/cover/source/logo.jpg","mtime":1394620683000},"l20kxb3yogvucymm":{"_id":"l20kxb3yogvucymm","source":"themes/cover/source/css/style.styl","mtime":1396090322000},"hp8yl8p2gqstwd49":{"_id":"hp8yl8p2gqstwd49","source":"themes/cover/source/js/bootstrap.min.js","mtime":1396090322000},"he4canosnhjvyyld":{"_id":"he4canosnhjvyyld","source":"themes/cover/source/js/cover.js","mtime":1396090322000},"wgfffbiklac7lk27":{"_id":"wgfffbiklac7lk27","source":"themes/cover/source/js/gallery.js","mtime":1396090322000},"7yzg3mwofit1cxp9":{"_id":"7yzg3mwofit1cxp9","source":"themes/cover/source/js/jquery.anystretch.min.js","mtime":1396090322000},"rhfl3uuztmtiojb8":{"_id":"rhfl3uuztmtiojb8","source":"themes/cover/source/js/jquery.imagesloaded.min.js","mtime":1396090322000},"db63xn5b72oyz8tw":{"_id":"db63xn5b72oyz8tw","source":"themes/cover/source/fancybox/blank.gif","mtime":1396090322000},"g9drwr6t3y3o1g08":{"_id":"g9drwr6t3y3o1g08","source":"themes/cover/source/fancybox/fancybox_loading.gif","mtime":1396090322000},"h3cpxiwjh00zbce9":{"_id":"h3cpxiwjh00zbce9","source":"themes/cover/source/fancybox/fancybox_loading@2x.gif","mtime":1396090322000},"sw9qk6mn2ex1jc34":{"_id":"sw9qk6mn2ex1jc34","source":"themes/cover/source/fancybox/fancybox_overlay.png","mtime":1396090322000},"tecml4pzfzmhxsf3":{"_id":"tecml4pzfzmhxsf3","source":"themes/cover/source/fancybox/fancybox_sprite.png","mtime":1396090322000},"ww2wqos8wei4njhm":{"_id":"ww2wqos8wei4njhm","source":"themes/cover/source/fancybox/fancybox_sprite@2x.png","mtime":1396090322000},"3iil06hogge728hp":{"_id":"3iil06hogge728hp","source":"themes/cover/source/fancybox/jquery.fancybox.css","mtime":1396090322000},"m85ye53fbshh5civ":{"_id":"m85ye53fbshh5civ","source":"themes/cover/source/fancybox/jquery.fancybox.pack.js","mtime":1396090322000},"zhcw31y6amqm0adk":{"_id":"zhcw31y6amqm0adk","source":"source/static/background.jpg","mtime":1396093886000}},"Cache":{"s8w8xc94mwapgvb0":{"_id":"s8w8xc94mwapgvb0","content":"title: A Redis scripts macro system\ndate: 2014-03-28\ntags: Redis, Node.js\ncategory: Work.en/Backend\n---\n\nWhen designing *Caaards.com*, I had decided to use Redis as main database and to\n manually flush cold data to the disk. Later, I noticed Redis's support for Lua\n scripts.\n\nIt works simply: just pass a piece of Lua script with some arguments. To access\nthose arguments (keys and values) you could access two **global** arrays,\n``KEYS`` and ``ARGV``. However, it has some special limits:\n\n<!--more-->\n\n1. keys are distinguished from other arguments so that your script could be sent\n to the right node in a cluster. When you pass arguments, you need to specify\nthe number of keys.\n\n2. Each script should be a pure function so Redis could keep data consistence\nbetween master and slave. What does this imply? You could not create global\nvariables, call random generators or get the time.\n\n3. You could not call other scripts from your script. That didn't make sense to\nme. I asked a [question on Stack Overflow][1]. However, my question is redundant\nand *Josiah* answered the correct question [here][2]. It is said that ``KEYS``\nand ``ARGV`` are two **globals**. If we need to call another script, Redis will\nhave to maintain another instance, which might be too heavy (the author boasted\n that script module only used three hundred lines).\n\nThe third one is serious to me, as my design is to write as much code base\nin Lua as possible. If I couldn't reuse code, it will be a catastrophe.\n\nLet's see an example any way:\n\n```Lua\nlocal intervals\nif redis.call('EXISTS', KEYS[4]) == 1 then\n  intervals = redis.call('GET', KEYS[4])\nelse\n  intervals = {5, 15, 60, 180, 720, 2880, 5760, 11520, 23040}\nend\n\nlocal star = tonumber(redis.call('GET', KEYS[3]))\nlocal time = ARGV[1] + intervals[star] * (1 + ARGV[2]) * 60 * 1000\n\nreturn redis.call('ZADD', KEYS[1], time, KEYS[2])\n```\n\nIn Lua, array index counts from 1 instead of 0.\n\nAnother issue is that code readability decreases due to meaningless variable\nname.\n\n---\n\nI decided to introduce a simple macro system. Why simple? Because I had never\nimplemented a parser. Therefore, all macros are wrapped with '%'. Scripts are\nstored in files and each file has a metadata table. The table records variables\ninvolved, the script name to other scripts, and the command name to clients. The\n above code could be rewritten like this:\n\n```Lua\n--[[\nname: quiz_update\nkeys: %quizset%, %word_key%, %star_key%, %interval_list%\nargv: %now_time%, %coefficient%\n]]--\n\nlocal intervals\nif redis.call('EXISTS', %interval_list%) == 1 then\n  intervals = redis.call('GET', %interval_list%)\nelse\n  intervals = {5, 15, 60, 180, 720, 2880, 5760, 11520, 23040}\nend\n\nlocal star = tonumber(redis.call('GET', %star_key%))\nlocal time = %now_time% + intervals[star] * (1 + %coefficient%) * 60 * 1000\n\nreturn redis.call('ZADD', %quizset%, time, %word_key%)\n```\n\nDoes it look much nicer?\n\nHow to call this script from other ones?\n\n```Lua\n%quiz_update%({ %quizset%, %word_key%, %star_key%, %interval_list% },\n              { %now_time%, %coefficient% })\n```\n\nI have finished this project but no tests have been done. I plan to publish it\nin one week.\n\n[1]:http://stackoverflow.com/questions/22432495/why-does-redis-forbid-user-script-to-call-other-scripts-how-to-keep-lua-scripts\n\n[2]:http://stackoverflow.com/questions/21718277/is-it-possible-to-call-lua-functions-defined-in-other-lua-scripts-in-redis/22599862\n","mtime":1396096970000,"source":"_posts/a-redis-scripts-macro-system.md"},"ojv4a96v3purscgc":{"_id":"ojv4a96v3purscgc","content":"title: Online Gadgets\ndate: 2014-03-29 20:00:41\ntags: javascript, HTML5\ncategory: Work.en/Frontend\n---\n\nSometimes we need to calculate the hash value of a string, to get the QR code\nof a string, or to generate icon (.ico) file of a picture. It is inconvenient\nto search them each time. Thus, I decided to write an online gadget library.\nThis project could also improve my frontend skills.\n\n<!--more-->\n\nHere is the list of my online gadget library plan:\n\n##Text encoding\n\n- Hash generator\n\n- QR code generator\n\n- Braille generator (inputing all dots of each characters instead of typing\n  some specific languages)\n\n##Image processing\n\n- Icon converter\n\n##References\n\n- [IPA (International Phonetic Alphebet)][1]\n\nIf you have good ideas, please comment.\n\n[1]: http://en.wikipedia.org/wiki/IPA\n","mtime":1396615784000,"source":"_posts/online-gadgets.md"},"c8w5ydv0whkti6e3":{"_id":"c8w5ydv0whkti6e3","content":"title: About\ndate: 2014-03-28\n---\n\n#About\n\nI am Minsheng Liu, a Chinese high school student.\n\nI am living at Anhui, China.\n\nMy birthday is December 17, 1997.\n\nI started this blog for two aims: the first and main aim is to correct my procrastination; the other one is to improve my writing skill in both English and Chinese.\n\nThe blog focuses on my life, my study, my thoughts and my work.\n\n---\n\n我叫刘闽晟, 是一名中国高中生.\n\n我现在住在中国安徽.\n\n我的生日是 1997年 12月 17日.\n\n我建立这个博客的目的有两个: 其一是改正我的拖延症; 其二则是提高我的写作水平, 不仅仅是英语, 还有汉语.\n\n这个博客专注于我的生活, 学习, 思考和工作.\n","mtime":1396615784000,"source":"about/index.md"}}}