date: 2014-03-29 20:38:32.286
argv: node /usr/local/bin/hexo g
os: Darwin 13.1.0 darwin x64
version:
  hexo: 2.3.0
  http_parser: 1.0
  node: 0.10.26
  v8: 3.14.5.9
  ares: 1.9.0-DEV
  uv: 0.10.25
  zlib: 1.2.3
  modules: 11
  openssl: 1.0.1e
---

.220 Theme layout loaded
[debug] 20:38:32.241 Theme source loaded
[debug] 20:38:32.243 Theme configuration loaded
[debug] 20:38:32.244 Processed: static/background.jpg
[debug] 20:38:32.264 Theme i18n loaded
[error] 20:38:32.277 HexoError: Process failed: _posts/a-redis-scripts-macro-system.md
TypeError: Object function marked(src, opt, callback) {
  if (callback || typeof opt === 'function') {
    if (!callback) {
      callback = opt;
      opt = null;
    }

    opt = merge({}, marked.defaults, opt || {});

    var highlight = opt.highlight
      , tokens
      , pending
      , i = 0;

    try {
      tokens = Lexer.lex(src, opt)
    } catch (e) {
      return callback(e);
    }

    pending = tokens.length;

    var done = function() {
      var out, err;

      try {
        out = Parser.parse(tokens, opt);
      } catch (e) {
        err = e;
      }

      opt.highlight = highlight;

      return err
        ? callback(err)
        : callback(null, out);
    };

    if (!highlight || highlight.length < 3) {
      return done();
    }

    delete opt.highlight;

    if (!pending) return done();

    for (; i < tokens.length; i++) {
      (function(token) {
        if (token.type !== 'code') {
          return --pending || done();
        }
        return highlight(token.text, token.lang, function(err, code) {
          if (code == null || code === token.text) {
            return --pending || done();
          }
          token.text = code;
          token.escaped = true;
          --pending || done();
        });
      })(tokens[i]);
    }

    return;
  }
  try {
    if (opt) opt = merge({}, marked.defaults, opt);
    return Parser.parse(Lexer.lex(src, opt), opt);
  } catch (e) {
    e.message += '\nPlease report this to https://github.com/chjj/marked.';
    if ((opt || marked.defaults).silent) {
      return '<p>An error occured:</p><pre>'
        + escape(e.message + '', true)
        + '</pre>';
    }
    throw e;
  }
} has no method 'toHTML'
    at markdown (/Users/LiuMS/GitHub/Selveskii.me/node_modules/hexo-renderer-markdownjs/index.js:5:13)
    at Object.store.(anonymous function) [as md] (/usr/local/lib/node_modules/hexo/lib/extend/renderer.js:26:27)
    at /usr/local/lib/node_modules/hexo/lib/render.js:105:22
    at fn (/usr/local/lib/node_modules/hexo/node_modules/async/lib/async.js:579:34)
    at Object._onImmediate (/usr/local/lib/node_modules/hexo/node_modules/async/lib/async.js:495:34)
    at processImmediate [as _immediateCallback] (timers.js:330:15)

[error] 20:38:32.283 HexoError: Process failed: _posts/online-gadgets.md
TypeError: Object function marked(src, opt, callback) {
  if (callback || typeof opt === 'function') {
    if (!callback) {
      callback = opt;
      opt = null;
    }

    opt = merge({}, marked.defaults, opt || {});

    var highlight = opt.highlight
      , tokens
      , pending
      , i = 0;

    try {
      tokens = Lexer.lex(src, opt)
    } catch (e) {
      return callback(e);
    }

    pending = tokens.length;

    var done = function() {
      var out, err;

      try {
        out = Parser.parse(tokens, opt);
      } catch (e) {
        err = e;
      }

      opt.highlight = highlight;

      return err
        ? callback(err)
        : callback(null, out);
    };

    if (!highlight || highlight.length < 3) {
      return done();
    }

    delete opt.highlight;

    if (!pending) return done();

    for (; i < tokens.length; i++) {
      (function(token) {
        if (token.type !== 'code') {
          return --pending || done();
        }
        return highlight(token.text, token.lang, function(err, code) {
          if (code == null || code === token.text) {
            return --pending || done();
          }
          token.text = code;
          token.escaped = true;
          --pending || done();
        });
      })(tokens[i]);
    }

    return;
  }
  try {
    if (opt) opt = merge({}, marked.defaults, opt);
    return Parser.parse(Lexer.lex(src, opt), opt);
  } catch (e) {
    e.message += '\nPlease report this to https://github.com/chjj/marked.';
    if ((opt || marked.defaults).silent) {
      return '<p>An error occured:</p><pre>'
        + escape(e.message + '', true)
        + '</pre>';
    }
    throw e;
  }
} has no method 'toHTML'
    at markdown (/Users/LiuMS/GitHub/Selveskii.me/node_modules/hexo-renderer-markdownjs/index.js:5:13)
    at Object.store.(anonymous function) [as md] (/usr/local/lib/node_modules/hexo/lib/extend/renderer.js:26:27)
    at /usr/local/lib/node_modules/hexo/lib/render.js:105:22
    at fn (/usr/local/lib/node_modules/hexo/node_modules/async/lib/async.js:579:34)
    at Object._onImmediate (/usr/local/lib/node_modules/hexo/node_modules/async/lib/async.js:495:34)
    at processImmediate [as _immediateCallback] (timers.js:330:15)
[debug] 20:38:32.083 Configuration file load successfully
[debug] 20:38:32.087 Plugin loaded successfully: hexo-renderer-markdownjs
[debug] 20:38:32.087 Version info checked successfully
[debug] 20:38:32.087 Loading the database...
[debug] 20:38:32.220 Theme layout loaded
[debug] 20:38:32.241 Theme source loaded
[debug] 20:38:32.243 Theme configuration loaded
[debug] 20:38:32.244 Processed: static/background.jpg
[debug] 20:38:32.264 Theme i18n loaded
[error] 20:38:32.277 HexoError: Process failed: _posts/a-redis-scripts-macro-system.md
TypeError: Object function marked(src, opt, callback) {
  if (callback || typeof opt === 'function') {
    if (!callback) {
      callback = opt;
      opt = null;
    }

    opt = merge({}, marked.defaults, opt || {});

    var highlight = opt.highlight
      , tokens
      , pending
      , i = 0;

    try {
      tokens = Lexer.lex(src, opt)
    } catch (e) {
      return callback(e);
    }

    pending = tokens.length;

    var done = function() {
      var out, err;

      try {
        out = Parser.parse(tokens, opt);
      } catch (e) {
        err = e;
      }

      opt.highlight = highlight;

      return err
        ? callback(err)
        : callback(null, out);
    };

    if (!highlight || highlight.length < 3) {
      return done();
    }

    delete opt.highlight;

    if (!pending) return done();

    for (; i < tokens.length; i++) {
      (function(token) {
        if (token.type !== 'code') {
          return --pending || done();
        }
        return highlight(token.text, token.lang, function(err, code) {
          if (code == null || code === token.text) {
            return --pending || done();
          }
          token.text = code;
          token.escaped = true;
          --pending || done();
        });
      })(tokens[i]);
    }

    return;
  }
  try {
    if (opt) opt = merge({}, marked.defaults, opt);
    return Parser.parse(Lexer.lex(src, opt), opt);
  } catch (e) {
    e.message += '\nPlease report this to https://github.com/chjj/marked.';
    if ((opt || marked.defaults).silent) {
      return '<p>An error occured:</p><pre>'
        + escape(e.message + '', true)
        + '</pre>';
    }
    throw e;
  }
} has no method 'toHTML'
    at markdown (/Users/LiuMS/GitHub/Selveskii.me/node_modules/hexo-renderer-markdownjs/index.js:5:13)
    at Object.store.(anonymous function) [as md] (/usr/local/lib/node_modules/hexo/lib/extend/renderer.js:26:27)
    at /usr/local/lib/node_modules/hexo/lib/render.js:105:22
    at fn (/usr/local/lib/node_modules/hexo/node_modules/async/lib/async.js:579:34)
    at Object._onImmediate (/usr/local/lib/node_modules/hexo/node_modules/async/lib/async.js:495:34)
    at processImmediate [as _immediateCallback] (timers.js:330:15)

[error] 20:38:32.283 HexoError: Process failed: _posts/online-gadgets.md
TypeError: Object function marked(src, opt, callback) {
  if (callback || typeof opt === 'function') {
    if (!callback) {
      callback = opt;
      opt = null;
    }

    opt = merge({}, marked.defaults, opt || {});

    var highlight = opt.highlight
      , tokens
      , pending
      , i = 0;

    try {
      tokens = Lexer.lex(src, opt)
    } catch (e) {
      return callback(e);
    }

    pending = tokens.length;

    var done = function() {
      var out, err;

      try {
        out = Parser.parse(tokens, opt);
      } catch (e) {
        err = e;
      }

      opt.highlight = highlight;

      return err
        ? callback(err)
        : callback(null, out);
    };

    if (!highlight || highlight.length < 3) {
      return done();
    }

    delete opt.highlight;

    if (!pending) return done();

    for (; i < tokens.length; i++) {
      (function(token) {
        if (token.type !== 'code') {
          return --pending || done();
        }
        return highlight(token.text, token.lang, function(err, code) {
          if (code == null || code === token.text) {
            return --pending || done();
          }
          token.text = code;
          token.escaped = true;
          --pending || done();
        });
      })(tokens[i]);
    }

    return;
  }
  try {
    if (opt) opt = merge({}, marked.defaults, opt);
    return Parser.parse(Lexer.lex(src, opt), opt);
  } catch (e) {
    e.message += '\nPlease report this to https://github.com/chjj/marked.';
    if ((opt || marked.defaults).silent) {
      return '<p>An error occured:</p><pre>'
        + escape(e.message + '', true)
        + '</pre>';
    }
    throw e;
  }
} has no method 'toHTML'
    at markdown (/Users/LiuMS/GitHub/Selveskii.me/node_modules/hexo-renderer-markdownjs/index.js:5:13)
    at Object.store.(anonymous function) [as md] (/usr/local/lib/node_modules/hexo/lib/extend/renderer.js:26:27)
    at /usr/local/lib/node_modules/hexo/lib/render.js:105:22
    at fn (/usr/local/lib/node_modules/hexo/node_modules/async/lib/async.js:579:34)
    at Object._onImmediate (/usr/local/lib/node_modules/hexo/node_modules/async/lib/async.js:495:34)
    at processImmediate [as _immediateCallback] (timers.js:330:15)

[error] 20:38:32.286 HexoError: Process failed: about/index.md
TypeError: Object function marked(src, opt, callback) {
  if (callback || typeof opt === 'function') {
    if (!callback) {
      callback = opt;
      opt = null;
    }

    opt = merge({}, marked.defaults, opt || {});

    var highlight = opt.highlight
      , tokens
      , pending
      , i = 0;

    try {
      tokens = Lexer.lex(src, opt)
    } catch (e) {
      return callback(e);
    }

    pending = tokens.length;

    var done = function() {
      var out, err;

      try {
        out = Parser.parse(tokens, opt);
      } catch (e) {
        err = e;
      }

      opt.highlight = highlight;

      return err
        ? callback(err)
        : callback(null, out);
    };

    if (!highlight || highlight.length < 3) {
      return done();
    }

    delete opt.highlight;

    if (!pending) return done();

    for (; i < tokens.length; i++) {
      (function(token) {
        if (token.type !== 'code') {
          return --pending || done();
        }
        return highlight(token.text, token.lang, function(err, code) {
          if (code == null || code === token.text) {
            return --pending || done();
          }
          token.text = code;
          token.escaped = true;
          --pending || done();
        });
      })(tokens[i]);
    }

    return;
  }
  try {
    if (opt) opt = merge({}, marked.defaults, opt);
    return Parser.parse(Lexer.lex(src, opt), opt);
  } catch (e) {
    e.message += '\nPlease report this to https://github.com/chjj/marked.';
    if ((opt || marked.defaults).silent) {
      return '<p>An error occured:</p><pre>'
        + escape(e.message + '', true)
        + '</pre>';
    }
    throw e;
  }
} has no method 'toHTML'
    at markdown (/Users/LiuMS/GitHub/Selveskii.me/node_modules/hexo-renderer-markdownjs/index.js:5:13)
    at Object.store.(anonymous function) [as md] (/usr/local/lib/node_modules/hexo/lib/extend/renderer.js:26:27)
    at /usr/local/lib/node_modules/hexo/lib/render.js:105:22
    at fn (/usr/local/lib/node_modules/hexo/node_modules/async/lib/async.js:579:34)
    at Object._onImmediate (/usr/local/lib/node_modules/hexo/node_modules/async/lib/async.js:495:34)
    at processImmediate [as _immediateCallback] (timers.js:330:15)
